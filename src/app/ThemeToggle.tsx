'use client';
import React, { useEffect, useState } from 'react';

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã (—Ç—ë–º–Ω–∞—è/—Å–≤–µ—Ç–ª–∞—è) —Å –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º —Å—Ç–∏–ª–µ–º.
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage.
 */
export default function ThemeToggle() {
  const [theme, setTheme] = useState<'dark' | 'light'>(
    typeof window !== 'undefined' && localStorage.getItem('theme') === 'light' ? 'light' : 'dark'
  );

  useEffect(() => {
    document.documentElement.classList.remove('dark', 'light');
    document.documentElement.classList.add(theme);
    localStorage.setItem('theme', theme);
  }, [theme]);

  return (
    <button
      className="px-4 py-2 rounded-xl font-bold bg-premium-surface text-premium-accent2 shadow-card hover:bg-premium-accent2 hover:text-premium-surface transition-all"
      onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
      aria-label="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É"
    >
      {theme === 'dark' ? 'üåô –¢—ë–º–Ω–∞—è' : '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è'}
    </button>
  );
}

/*
  –î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–µ–º—ã –≤ Tailwind –¥–æ–±–∞–≤—å—Ç–µ –≤ tailwind.config.js:
  darkMode: 'class',
*/ 